// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeansOffice.Migrations
{
    [DbContext(typeof(DeanDbContext))]
    [Migration("20250510153149_Initial-Create")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.3.0-rtm-25064.12");

            modelBuilder.Entity("DeansOffice.Database.GroupSubject", b =>
                {
                    b.Property<int>("GroupID");

                    b.Property<int>("SubjectID");

                    b.Property<int>("Semester");

                    b.HasKey("GroupID", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("GroupSubjects");
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Grade", b =>
                {
                    b.Property<int>("GradeID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("GradeDate");

                    b.Property<int>("GradeValue");

                    b.Property<int>("StudentID");

                    b.Property<int>("SubjectID");

                    b.Property<int>("TeacherID");

                    b.HasKey("GradeID");

                    b.HasIndex("StudentID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Course");

                    b.Property<int?>("CuratorID");

                    b.Property<string>("GroupName");

                    b.Property<string>("Specialty");

                    b.HasKey("GroupID");

                    b.HasIndex("CuratorID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Report", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy");

                    b.Property<string>("FilePath");

                    b.Property<DateTime>("GeneratedAt");

                    b.Property<string>("ReportType");

                    b.HasKey("ReportID");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduleID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DayOfWeek");

                    b.Property<int>("GroupID");

                    b.Property<string>("Room");

                    b.Property<int>("SubjectID");

                    b.Property<int>("TeacherID");

                    b.Property<DateTime>("TimeSlot");

                    b.HasKey("ScheduleID");

                    b.HasIndex("GroupID");

                    b.HasIndex("SubjectID");

                    b.HasIndex("TeacherID");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email");

                    b.Property<int>("EnrollmentYear");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<int>("GroupID");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("StudentID");

                    b.HasIndex("GroupID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Subject", b =>
                {
                    b.Property<int>("SubjectID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Hours");

                    b.Property<int>("Semester");

                    b.Property<string>("SubjectName");

                    b.HasKey("SubjectID");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AcademicTitle");

                    b.Property<string>("Department");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("TeacherID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("DeansOffice.Database.Models.TeacherSubject", b =>
                {
                    b.Property<int>("TeacherID");

                    b.Property<int>("SubjectID");

                    b.HasKey("TeacherID", "SubjectID");

                    b.HasIndex("SubjectID");

                    b.ToTable("TeacherSubjects");
                });

            modelBuilder.Entity("DeansOffice.Database.GroupSubject", b =>
                {
                    b.HasOne("DeansOffice.Database.Models.Group", "Group")
                        .WithMany("GroupSubjects")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DeansOffice.Database.Models.Subject", "Subject")
                        .WithMany("GroupSubjects")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Grade", b =>
                {
                    b.HasOne("DeansOffice.Database.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DeansOffice.Database.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DeansOffice.Database.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Group", b =>
                {
                    b.HasOne("DeansOffice.Database.Models.Teacher", "Curator")
                        .WithMany("CuratedGroups")
                        .HasForeignKey("CuratorID")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Schedule", b =>
                {
                    b.HasOne("DeansOffice.Database.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DeansOffice.Database.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DeansOffice.Database.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DeansOffice.Database.Models.Student", b =>
                {
                    b.HasOne("DeansOffice.Database.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DeansOffice.Database.Models.TeacherSubject", b =>
                {
                    b.HasOne("DeansOffice.Database.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DeansOffice.Database.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
